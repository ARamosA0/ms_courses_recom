version: "3.4"
services:

  # puerto 3000
  frontend:
    build: ./frontend
    ports: 
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
      - exclude:/frontend/node_modules/
    networks:
      - frontend
      - kong-net

  #SERVICIO para recolectar data del EventBroker
  #y guardarla en REDIS para su procesado
  #en dotnet
  collect:
    build: ./collect
    volumes:
      - ./collect:/usr/local/app
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - back-process
      - kong-net

  #SERVICIO para el procesamiento de data
  #en python
  #puerto 5000
  procesing:
    image: aldorama/procesing:solo10m
    ports:
      - "5000:80"
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - back-process
      - kong-net
  #SERVICIO para crud de cursos 
  #en python
  #puerto 5001
  cursos:
    image: eddlihuisi/cursos
    ports:
      - "5001:81"
    environment:
      DATABASE_URL: postgresql://postgres-cursos:postgres-cursos@db-cursos:5432/postgres-cursos
    networks:
      - back-tier-cursos 
      - kong-net
    

  #SERVICIO para crud de usuarios
  #en python
  #puerto 5002
  usuarios:
    build: 
      context: ./usuarios
    depends_on:
#      - kafka
      - db-usuarios
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "5002:82"
    environment:
      KAFKA_BROKER: kafka:9092
      DATABASE_URL: postgresql://postgres-usuarios:postgres-usuarios@db-usuarios:5432/postgres-usuarios
    networks:
      - back-tier-usuarios
 #     - kong-net 
    volumes:
      - ./usuarios:/usr/local/app

  #BD de Usuarios en PostgreSQL
  db-usuarios:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: "postgres-usuarios"
      POSTGRES_NAME: "postgres-usuarios"
      POSTGRES_USER: "postgres-usuarios"
      POSTGRES_PASSWORD: "postgres-usuarios"
    volumes:
      - "db-data-usuarios:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    ports:
      - "5432:5432"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier-usuarios

  #BD de Cursos en PostgreSQL
  db-cursos:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: "postgres-cursos"
      POSTGRES_NAME: "postgres-cursos"
      POSTGRES_USER: "postgres-cursos"
      POSTGRES_PASSWORD: "postgres-cursos"
    volumes:
      - "db-data-cursos:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    ports:
      - "5433:5432"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier-cursos
  
  redis-collect:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    ports:
      - "6379:6379"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-process

  redis-process:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    ports:
      - "6380:6379"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-process

volumes:
  exclude:
  db-data-cursos:
  db-data-usuarios:
  persist_volume:
  postgres_data:
  mongo_data:

networks:
  frontend:
  back-tier-usuarios:
  back-tier-cursos:
  back-process:
  kong-net:
